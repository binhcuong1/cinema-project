axios.defaults.baseURL = "http://127.0.0.1:3000";
import { closeAuthModal, switchToLogin } from "./auth.js";

// X·ª≠ l√Ω ƒëƒÉng nh·∫≠p
async function handleLogin(e) {
  e.preventDefault();
  const username = document.getElementById("login-email").value;
  const password = document.getElementById("login-password").value;
  const errorDiv = document.getElementById("login-error");

  try {
    const response = await axios.post(
      "/api/users/login",
      {
        ten_dang_nhap: username,
        mat_khau: password,
      },
      { withCredentials: true }
    );

    if (response.data.success === "true") {
      localStorage.setItem("user", JSON.stringify(response.data.data));
      closeAuthModal();
      window.location.reload();
    } else {
      throw new Error(response.data.error || "ƒêƒÉng nh·∫≠p th·∫•t b·∫°i!");
    }
  } catch (err) {
    console.error("L·ªói ƒëƒÉng nh·∫≠p:", err);

    const errorDiv = document.getElementById("login-error");
    let errorMessage = "ƒêƒÉng nh·∫≠p th·∫•t b·∫°i.";

    if (err.response?.status === 401) {
      errorMessage = "T√†i kho·∫£n ho·∫∑c m·∫≠t kh·∫©u kh√¥ng ƒë√∫ng!";
      document.getElementById("login-password")?.classList.add("input-error");
    } else if (err.response?.data?.error) {
      errorMessage = err.response.data.error;
    } else {
      errorMessage = err.message || "ƒêƒÉng nh·∫≠p th·∫•t b·∫°i.";
    }

    if (errorDiv) {
      errorDiv.textContent = errorMessage;
      errorDiv.style.display = "block";
    } else {
      alert(errorMessage);
    }
  }
}

// Ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p
export async function checkAuthStatus() {
  const authBtn = document.getElementById("auth-btn");
  const logoutBtn = document.getElementById("logout-btn");

  try {
    const res = await axios.get("/api/users/me", {
      withCredentials: true,
    });
    if (res.data.success === "true") {
      const user = res.data.data;
      if (authBtn && logoutBtn) {
        authBtn.textContent = `Xin ch√†o, ${user.ho_va_ten}`;
        authBtn.classList.remove("login-btn");
        authBtn.removeAttribute("onclick");
        logoutBtn.style.display = "inline-block";
      }
    }
  } catch (err) {
    console.error("L·ªói khi g·ªçi /api/users/me:", err);
    if (authBtn && logoutBtn) {
      authBtn.textContent = "ƒêƒÉng Nh·∫≠p";
      authBtn.classList.add("login-btn");
      authBtn.setAttribute("onclick", "showLoginForm()");
      logoutBtn.style.display = "none";
    }
  }
}

// ƒêƒÉng xu·∫•t
function handleLogout() {
  axios.post("/api/users/logout", {}, { withCredentials: true }).then(() => {
    localStorage.removeItem("user");
    window.location.reload();
  });
}

// Qu√™n m·∫≠t kh·∫©u
async function handleForgotPassword(e) {
  e.preventDefault();
  const emailInput = document.getElementById("forgot-email");
  const errorDiv = document.getElementById("forgot-error");

  // Reset l·ªói c≈© n·∫øu c√≥
  emailInput?.classList.remove("input-error");
  if (errorDiv) {
    errorDiv.style.display = "none";
    errorDiv.textContent = "";
  }

  try {
    const res = await axios.post("/api/users/forgot-password", {
      email: emailInput.value,
    });

    if (res.data.success === "true") {
      alert("üìß ƒê√£ g·ª≠i email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u!");
      switchToLogin();
    } else {
      throw new Error(res.data.error || "Th·∫•t b·∫°i!");
    }
  } catch (err) {
    let errorMessage = "C√≥ l·ªói x·∫£y ra.";
    const errorDiv = document.getElementById("forgot-error");

    if (err.response?.status === 404) {
      errorMessage = "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng v·ªõi email n√†y!";
    } else if (err.response?.data?.error) {
      errorMessage = err.response.data.error;
    } else {
      errorMessage = err.message || "G·ª≠i y√™u c·∫ßu th·∫•t b·∫°i.";
    }

    if (errorDiv) {
      errorDiv.textContent = errorMessage;
      errorDiv.style.display = "block";
    }

    document.getElementById("forgot-email")?.classList.add("input-error");
  }
}

// ƒêƒÉng k√Ω t√†i kho·∫£n
async function handleRegister(e) {
  e.preventDefault();

  const ten_dang_nhap = document.getElementById("email").value;
  const mat_khau = document.getElementById("password").value;
  const mat_khau_lai = document.getElementById("confirm-password").value;
  const ho_va_ten = document.getElementById("fullname").value;
  const sdt = document.getElementById("phone").value;
  const errorDiv = document.getElementById("register-error");

  if (mat_khau !== mat_khau_lai) {
    errorDiv.textContent = "M·∫≠t kh·∫©u nh·∫≠p l·∫°i kh√¥ng kh·ªõp.";
    errorDiv.style.display = "block";
    return;
  }

  try {
    const res = await axios.post("/api/users/register", {
      ten_dang_nhap,
      mat_khau,
      ho_va_ten,
      sdt,
    });

    if (res.data.success === true || res.data.success === "true") {
      alert("üéâ ƒêƒÉng k√Ω th√†nh c√¥ng! Vui l√≤ng ƒëƒÉng nh·∫≠p.");
      window.location.reload();
    } else {
      throw new Error(res.data.error || "ƒêƒÉng k√Ω th·∫•t b·∫°i!");
    }
  } catch (err) {
    let errorMessage = "ƒêƒÉng k√Ω th·∫•t b·∫°i.";

    if (err.response && err.response.status === 409) {
      errorMessage = "Email ho·∫∑c t√†i kho·∫£n ƒë√£ t·ªìn t·∫°i!";
      document.getElementById("email")?.classList.add("input-error");
    } else if (err.response?.data?.error) {
      errorMessage = err.response.data.error;
    } else {
      errorMessage = err.message || "ƒêƒÉng k√Ω th·∫•t b·∫°i.";
    }

    if (errorDiv) {
      errorDiv.textContent = errorMessage;
      errorDiv.style.display = "block";
    }
  }
}

// L·∫•y danh s√°ch ng∆∞·ªùi d√πng
let currentUserId = null;
let currentUserRoleId = null;

// L·∫•y th√¥ng tin ng∆∞·ªùi d√πng hi·ªán t·∫°i t·ª´ backend
async function fetchCurrentUser() {
  try {
    const res = await axios.get("/api/users/me", { withCredentials: true });
    if (res.data.success === "true") {
      currentUserId = res.data.data.ma_tai_khoan;
      currentUserRoleId = parseInt(res.data.data.role_id); // ƒë·∫£m b·∫£o l√† s·ªë
      fetchUsers(); // g·ªçi sau khi ƒë√£ c√≥ role
    } else {
      alert("Kh√¥ng l·∫•y ƒë∆∞·ª£c th√¥ng tin ng∆∞·ªùi d√πng hi·ªán t·∫°i");
    }
  } catch (err) {
    console.error("L·ªói khi l·∫•y ng∆∞·ªùi d√πng hi·ªán t·∫°i:", err);
    alert("Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i!");
    window.location.href = "/login.html";
  }
}

async function fetchUsers() {
  console.log("B·∫°n l√†:", currentUserRoleId);
  const userList = document.getElementById("user-list");
  const errorMessage = document.getElementById("error-message");

  try {
    const response = await axios.get("/api/users", { withCredentials: true });

    if (response.data.success === true && Array.isArray(response.data.data)) {
      userList.innerHTML = "";

      response.data.data.forEach((user) => {
        const row = document.createElement("tr");
        row.innerHTML = `
          <td>${user.ten_dang_nhap}</td>
          <td>${user.ho_va_ten}</td>
          <td>${user.sdt || ""}</td>
          <td>${user.diachi || ""}</td>
          <td>
            <select class="role-select" data-id="${user.ma_tai_khoan}" ${user.role_id === 99 ? "disabled" : ""}>
                <option value="1" ${
                  user.role_id === 1 ? "selected" : ""
                }>Admin</option>
                <option value="2" ${
                  user.role_id === 2 ? "selected" : ""
                }>Nh√¢n vi√™n</option>
                <option value="3" ${
                  user.role_id === 3 ? "selected" : ""
                }>Ng∆∞·ªùi d√πng</option>
                ${
                  user.role_id === 99
                    ? '<option value="99" selected disabled>SuperAdmin</option>'
                    : ""
                }
            </select>
            ${
              user.role_id === 99 
              ? ""
              :
              `<button class="update-role-btn" data-id="${
                  user.ma_tai_khoan
                }" data-role="${user.role_id}">C·∫≠p nh·∫≠t</button>
            `
            }
          </td>
        `;
        userList.appendChild(row);
      });

      // G·∫Øn s·ª± ki·ªán click sau khi render
      document.querySelectorAll(".update-role-btn").forEach((btn) => {
        btn.addEventListener("click", async () => {
          const userId = btn.getAttribute("data-id");
          const oldRole = parseInt(btn.getAttribute("data-role")); // L·∫•y vai tr√≤ g·ªëc c·ªßa ng∆∞·ªùi b·ªã ch·ªânh
          const select = document.querySelector(
            `.role-select[data-id="${userId}"]`
          );
          const newRole = parseInt(select.value);

          // Ki·ªÉm tra quy·ªÅn h·∫°n c·ªßa ng∆∞·ªùi d√πng hi·ªán t·∫°i
          if (currentUserRoleId === 1 && (oldRole === 1 || oldRole === 99)) {
            alert("‚ùå B·∫°n kh√¥ng c√≥ ƒë·ªß quy·ªÅn h·∫°n ƒë·ªÉ ch·ªânh s·ª≠a ng∆∞·ªùi n√†y!");
            return;
          }

          try {
            const res = await axios.put(`/api/users/${userId}/role`, {
              role_id: newRole,
            });
            if (res.data.success) {
              alert("‚úÖ C·∫≠p nh·∫≠t vai tr√≤ th√†nh c√¥ng!");
              fetchUsers(); // Reload l·∫°i danh s√°ch n·∫øu c·∫ßn
            } else {
              throw new Error(res.data.error || "Th·∫•t b·∫°i!");
            }
          } catch (err) {
            console.error("L·ªói c·∫≠p nh·∫≠t vai tr√≤:", err);
            alert("‚ùå Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t vai tr√≤!");
          }
        });
      });
    } else {
      throw new Error("D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá ho·∫∑c kh√¥ng c√≥ ng∆∞·ªùi d√πng.");
    }
  } catch (err) {
    console.error("L·ªói khi l·∫•y danh s√°ch ng∆∞·ªùi d√πng:", err);
    if (errorMessage) {
      errorMessage.textContent =
        err.response?.data?.error || "Kh√¥ng th·ªÉ t·∫£i danh s√°ch ng∆∞·ªùi d√πng.";
      errorMessage.style.display = "block";
    }
  }
}

document.addEventListener("DOMContentLoaded", () => {
  if (document.body.getAttribute("data-page") === "user-list") {
    fetchCurrentUser();
    fetchUsers();
  }
});

// Th√™m ng∆∞·ªùi d√πng trong H·ªá th·ªëng
document.getElementById("add-user-button")?.addEventListener("click", () => {
  document.getElementById("add-user-modal").style.display = "flex";
});

document.querySelector(".close-modal")?.addEventListener("click", () => {
  document.getElementById("add-user-modal").style.display = "none";
});

document
  .getElementById("confirm-add-user")
  ?.addEventListener("click", async () => {
    const ho_va_ten = document.getElementById("new-fullname").value.trim();
    const ten_dang_nhap = document.getElementById("new-username").value.trim();
    const mat_khau = "1";

    if (!ho_va_ten || !ten_dang_nhap) {
      alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin!");
      return;
    }

    try {
      const res = await axios.post("/api/users/register", {
        ho_va_ten,
        ten_dang_nhap,
        mat_khau,
      });

      if (res.data.success) {
        alert("üéâ Th√™m ng∆∞·ªùi d√πng th√†nh c√¥ng!");
        document.getElementById("add-user-modal").style.display = "none";
        fetchUsers();
      } else {
        throw new Error(res.data.error || "Th√™m ng∆∞·ªùi d√πng th·∫•t b·∫°i!");
      }
    } catch (err) {
      console.error("L·ªói khi th√™m ng∆∞·ªùi d√πng:", err);
      alert(err.response?.data?.error || "Kh√¥ng th·ªÉ th√™m ng∆∞·ªùi d√πng!");
    }
  });

export function initLoginEvents() {
  const loginForm = document.getElementById("login-form-submit");
  if (loginForm) {
    loginForm.addEventListener("submit", handleLogin);
  }

  const forgotForm = document.getElementById("forgot-password-form-submit");
  if (forgotForm) {
    forgotForm.addEventListener("submit", handleForgotPassword);
  }

  const logoutBtn = document.getElementById("logout-btn");
  if (logoutBtn) {
    logoutBtn.addEventListener("click", handleLogout);
  }

  const registerForm = document.getElementById("register-form-submit");
  if (registerForm) {
    registerForm.addEventListener("submit", handleRegister);
  }
}
